{"version":3,"file":"app.bundle.js","mappings":";;;;;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvCe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxBsB;AACqC;AACD;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA","sources":["webpack://intro-section/./src/modules/DesktopNavigation.ts","webpack://intro-section/./src/modules/MobileNavigation.ts","webpack://intro-section/./src/app.ts"],"sourcesContent":["export default class DeskTopNavigaton {\n    constructor(header) {\n        this.navbar = header.querySelector('#navigation');\n        this.onClickEvent = this.onClickEvent.bind(this);\n        this.onKeydownEvent = this.onKeydownEvent.bind(this);\n        this.navbar.addEventListener('click', this.onClickEvent);\n        this.navbar.addEventListener('keydown', this.onKeydownEvent);\n        console.log('DESKTOP NAIGATION');\n    }\n    onClickEvent({ target }) {\n        let toggleBtn = target.closest('button');\n        if (!toggleBtn)\n            return;\n        if (toggleBtn.dataset.id != 'toggle-btn')\n            return;\n        this.toggleMenu(toggleBtn);\n    }\n    onKeydownEvent(event) {\n        let target = event.target;\n        if (target.tagName != 'BUTTON')\n            return;\n        if (event.code == 'Escape' && target.getAttribute('aria-expanded') == 'true') {\n            this.toggleMenu(target);\n            target.focus();\n        }\n    }\n    toggleMenu(toggleBtn) {\n        if (!toggleBtn.classList.contains('showpopup')) {\n            toggleBtn.classList.add('showpopup');\n            toggleBtn.setAttribute('aria-expanded', 'true');\n        }\n        else {\n            toggleBtn.classList.remove('showpopup');\n            toggleBtn.setAttribute('aria-expanded', 'false');\n        }\n    }\n    removeDeskTopListeners() {\n        this.navbar.removeEventListener('click', this.onClickEvent);\n    }\n}\n","export default class MobileNavigation {\n    constructor(header) {\n        this.header = header;\n        this.onClickEvent = this.onClickEvent.bind(this);\n        header.addEventListener('click', this.onClickEvent);\n        console.log('MOBILE NAVIGATION');\n    }\n    onClickEvent({ target }) {\n        let btn = target.closest('[data-id]');\n        if (!btn)\n            return;\n        this.toggleBtn(btn);\n    }\n    toggleBtn(btn) {\n        if (btn.getAttribute('aria-expanded') == 'false') {\n            btn.setAttribute('aria-expanded', 'true');\n        }\n        else {\n            btn.setAttribute('aria-expanded', 'false');\n        }\n    }\n    removeMobileListeners() {\n        this.header.removeEventListener('click', this.onClickEvent);\n    }\n}\n","import './styles.css';\nimport DeskTopNavigaton from './modules/DesktopNavigation';\nimport MobileNavigation from './modules/MobileNavigation';\ndocument.addEventListener('DOMContentLoaded', init);\nlet desktop = null;\nlet mobile = null;\n;\nconst state = {\n    isMobileActivated: false,\n    isDesktopActivated: false\n};\nfunction init() {\n    const header = document.getElementById('header');\n    window.addEventListener('resize', () => activateNavMenu(header, state));\n    activateNavMenu(header, state);\n}\nfunction activateNavMenu(header, state) {\n    let screenWidth = document.documentElement.clientWidth;\n    let maxMobileWidth = 928;\n    if (screenWidth > maxMobileWidth && state.isDesktopActivated == false) {\n        state.isMobileActivated = false;\n        state.isDesktopActivated = true;\n        desktop = new DeskTopNavigaton(header);\n        if (mobile) {\n            mobile.removeMobileListeners();\n        }\n    }\n    if (screenWidth < maxMobileWidth && state.isMobileActivated == false) {\n        state.isMobileActivated = true;\n        state.isDesktopActivated = false;\n        mobile = new MobileNavigation(header);\n        if (desktop) {\n            desktop.removeDeskTopListeners();\n        }\n    }\n}\n"],"names":[],"sourceRoot":""}